@page "/editWeather/{id:int}"
@rendermode InteractiveServer
@inject HttpClient Http
@inject NavigationManager Navigation

    <EditForm Model="weather" OnSubmit="HandleEdit">
        <div class="form-group">
            <label for="name">Date</label>
            <InputDate id="name" class="form-control" @bind-Value="weather.Date" />
        </div>
        <div class="form-group">
            <label for="name">Location</label>
            <InputText id="name" class="form-control" @bind-Value="weather.Location" />
        </div>
        <div class="form-group">
            <label for="name">Temperature</label>
            <InputNumber id="name" class="form-control" @bind-Value="weather.TemperatureC" />
        </div>
        <div class="form-group">
            <label for="name">Summary</label>
            <InputText id="name" class="form-control" @bind-Value="weather.Summary" />
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Cancel</button>
    </EditForm>
@code {
    [Parameter] 
    public int? id { get; set; }

    WeatherApp.Models.Weather? weather = new();

    protected override async Task OnInitializedAsync()
    {
        weather = await Http.GetFromJsonAsync<WeatherApp.Models.Weather>($"api/weather/{id}");
    }

    private async Task HandleEdit()
    {
        await Http.PutAsJsonAsync($"/api/weather/{id}", weather);
        OnInitialized();
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/weatherList");
    }
}
